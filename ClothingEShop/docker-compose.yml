version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: clothingeshop-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-clothingeshop}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - clothingeshop-network
    restart: unless-stopped

  # Clothing E-Shop Application
  clothingeshop-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: clothingeshop-app
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=${DB_NAME:-clothingeshop};Username=${DB_USER:-postgres};Password=${DB_PASSWORD:-postgres};Port=5432;
    ports:
      - "${APP_PORT:-8080}:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - clothingeshop-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

  # pgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: clothingeshop-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@clothingeshop.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "${PGADMIN_PORT:-8081}:80"
    depends_on:
      - postgres
    networks:
      - clothingeshop-network
    restart: unless-stopped
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  clothingeshop-network:
    driver: bridge