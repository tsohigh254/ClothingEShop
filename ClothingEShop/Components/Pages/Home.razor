@page "/"
@using ClothingEShop.Models
@using ClothingEShop.Services
@inject IProductService ProductService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Home - Clothing E-Shop</PageTitle>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1 class="display-4">Welcome to Clothing E-Shop</h1>
                <a href="/products/create" class="btn btn-primary">
                    <i class="bi bi-plus-lg"></i> Add New Product
                </a>
            </div>
            
            <!-- Search Bar -->
            <div class="row mb-4">
                <div class="col-md-6">
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Search products..." @bind="searchTerm" @onkeypress="HandleKeyPress" />
                        <button class="btn btn-outline-secondary" type="button" @onclick="SearchProducts">
                            <i class="bi bi-search"></i> Search
                        </button>
                        @if (!string.IsNullOrEmpty(searchTerm))
                        {
                            <button class="btn btn-outline-danger" type="button" @onclick="ClearSearch">
                                <i class="bi bi-x-lg"></i>
                            </button>
                        }
                    </div>
                </div>
            </div>

            @if (isLoading)
            {
                <div class="text-center">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            }
            else if (products == null || !products.Any())
            {
                <div class="alert alert-info text-center">
                    <h4>No products found</h4>
                    <p>@(string.IsNullOrEmpty(searchTerm) ? "Start by adding some products to your store!" : $"No products match '{searchTerm}'")</p>
                    <a href="/products/create" class="btn btn-primary">Add Your First Product</a>
                </div>
            }
            else
            {
                <div class="row">
                    @foreach (var product in products)
                    {
                        <div class="col-md-6 col-lg-4 col-xl-3 mb-4">
                            <div class="card h-100 shadow-sm">
                                @if (!string.IsNullOrEmpty(product.ImageUrl))
                                {
                                    <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name" style="height: 200px; object-fit: cover;" />
                                }
                                else
                                {
                                    <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
                                        <i class="bi bi-image text-muted" style="font-size: 3rem;"></i>
                                    </div>
                                }
                                <div class="card-body d-flex flex-column">
                                    <h5 class="card-title">@product.Name</h5>
                                    <p class="card-text flex-grow-1">@product.Description</p>
                                    <div class="mt-auto">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <span class="h5 text-primary mb-0">$@product.Price.ToString("F2")</span>
                                            <div class="btn-group">
                                                <a href="/products/@product.Id" class="btn btn-outline-primary btn-sm">View</a>
                                                <a href="/products/edit/@product.Id" class="btn btn-outline-secondary btn-sm">Edit</a>
                                                <button class="btn btn-outline-danger btn-sm" @onclick="() => DeleteProduct(product.Id)">Delete</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>

@code {
    private List<Product>? products;
    private bool isLoading = true;
    private string searchTerm = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await LoadProducts();
    }

    private async Task LoadProducts()
    {
        isLoading = true;
        try
        {
            products = await ProductService.GetAllProductsAsync();
        }
        catch (Exception ex)
        {
            // Handle error appropriately
            products = new List<Product>();
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task SearchProducts()
    {
        isLoading = true;
        try
        {
            products = await ProductService.SearchProductsAsync(searchTerm);
        }
        catch (Exception ex)
        {
            // Handle error appropriately
            products = new List<Product>();
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task ClearSearch()
    {
        searchTerm = string.Empty;
        await LoadProducts();
    }

    private async Task HandleKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await SearchProducts();
        }
    }

    private async Task DeleteProduct(int productId)
    {
        if (await ProductService.DeleteProductAsync(productId))
        {
            await LoadProducts(); // Refresh the list
        }
    }
}
