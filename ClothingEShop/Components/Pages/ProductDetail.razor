@page "/products/{id:int}"
@using ClothingEShop.Models
@using ClothingEShop.Services
@inject IProductService ProductService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>@(product?.Name ?? "Product Details") - Clothing E-Shop</PageTitle>

<div class="container-fluid">
    @if (isLoading)
    {
        <div class="text-center py-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading product...</span>
            </div>
        </div>
    }
    else if (product == null)
    {
        <div class="alert alert-warning text-center py-5">
            <i class="bi bi-exclamation-triangle display-1 text-warning"></i>
            <h3 class="mt-3">Product Not Found</h3>
            <p class="lead">The product you're looking for doesn't exist or has been removed.</p>
            <div class="mt-4">
                <a href="/products" class="btn btn-primary me-2">
                    <i class="bi bi-arrow-left"></i> Back to Products
                </a>
                <a href="/" class="btn btn-outline-secondary">
                    <i class="bi bi-house"></i> Go Home
                </a>
            </div>
        </div>
    }
    else
    {
        <!-- Breadcrumb -->
        <nav aria-label="breadcrumb" class="mb-4">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Home</a></li>
                <li class="breadcrumb-item"><a href="/products">Products</a></li>
                <li class="breadcrumb-item active" aria-current="page">@product.Name</li>
            </ol>
        </nav>

        <div class="row">
            <!-- Product Image -->
            <div class="col-lg-6 mb-4">
                @if (!string.IsNullOrEmpty(product.ImageUrl))
                {
                    <div class="text-center">
                        <img src="@product.ImageUrl" alt="@product.Name" 
                             class="img-fluid rounded shadow-lg" 
                             style="max-height: 500px; width: auto;" />
                    </div>
                }
                else
                {
                    <div class="bg-light rounded d-flex align-items-center justify-content-center shadow-lg" 
                         style="height: 400px;">
                        <i class="bi bi-image text-muted" style="font-size: 6rem;"></i>
                    </div>
                }
            </div>

            <!-- Product Details -->
            <div class="col-lg-6">
                <div class="sticky-top" style="top: 2rem;">
                    <h1 class="display-5 mb-3">@product.Name</h1>
                    
                    <div class="mb-4">
                        <span class="badge bg-primary fs-6 px-3 py-2">
                            $@product.Price.ToString("F2")
                        </span>
                    </div>

                    <div class="mb-4">
                        <h5 class="text-muted mb-2">Description</h5>
                        <p class="lead">@product.Description</p>
                    </div>

                    <div class="mb-4">
                        <div class="row text-muted small">
                            <div class="col-sm-6">
                                <strong>Product ID:</strong> #@product.Id
                            </div>
                            <div class="col-sm-6">
                                <strong>Added:</strong> @product.CreatedAt.ToString("MMM dd, yyyy")
                            </div>
                            @if (product.UpdatedAt != product.CreatedAt)
                            {
                                <div class="col-sm-12 mt-1">
                                    <strong>Last Updated:</strong> @product.UpdatedAt.ToString("MMM dd, yyyy 'at' HH:mm")
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Action Buttons -->
                    <div class="d-grid gap-2">
                        <div class="btn-group">
                            <a href="/products/edit/@product.Id" class="btn btn-primary btn-lg">
                                <i class="bi bi-pencil"></i> Edit Product
                            </a>
                            <button class="btn btn-outline-danger btn-lg" @onclick="ShowDeleteConfirmation">
                                <i class="bi bi-trash"></i> Delete Product
                            </button>
                        </div>
                        
                        <div class="btn-group mt-2">
                            <a href="/products" class="btn btn-outline-secondary">
                                <i class="bi bi-arrow-left"></i> Back to Products
                            </a>
                            <a href="/" class="btn btn-outline-secondary">
                                <i class="bi bi-house"></i> Home
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Delete Confirmation Modal -->
@if (showDeleteModal)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-danger">
                        <i class="bi bi-exclamation-triangle"></i> Confirm Delete
                    </h5>
                    <button type="button" class="btn-close" @onclick="HideDeleteConfirmation"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete "<strong>@product?.Name</strong>"?</p>
                    <div class="alert alert-warning">
                        <i class="bi bi-warning"></i> This action cannot be undone.
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="HideDeleteConfirmation">
                        <i class="bi bi-x"></i> Cancel
                    </button>
                    <button type="button" class="btn btn-danger" @onclick="ConfirmDelete">
                        <i class="bi bi-trash"></i> Delete Product
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public int Id { get; set; }
    
    private Product? product;
    private bool isLoading = true;
    private bool showDeleteModal = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadProduct();
    }

    protected override async Task OnParametersSetAsync()
    {
        await LoadProduct();
    }

    private async Task LoadProduct()
    {
        isLoading = true;
        try
        {
            product = await ProductService.GetProductByIdAsync(Id);
        }
        catch (Exception ex)
        {
            // Handle error appropriately
            product = null;
        }
        finally
        {
            isLoading = false;
        }
    }

    private void ShowDeleteConfirmation()
    {
        showDeleteModal = true;
    }

    private void HideDeleteConfirmation()
    {
        showDeleteModal = false;
    }

    private async Task ConfirmDelete()
    {
        if (product == null) return;
        
        try
        {
            if (await ProductService.DeleteProductAsync(product.Id))
            {
                Navigation.NavigateTo("/products");
            }
        }
        catch (Exception ex)
        {
            // Handle error
        }
        finally
        {
            HideDeleteConfirmation();
        }
    }
}